<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~     ___                  _   ____  ____
  ~    / _ \ _   _  ___  ___| |_|  _ \| __ )
  ~   | | | | | | |/ _ \/ __| __| | | |  _ \
  ~   | |_| | |_| |  __/\__ \ |_| |_| | |_) |
  ~    \__\_\\__,_|\___||___/\__|____/|____/
  ~
  ~  Copyright (c) 2014-2019 Appsicle
  ~  Copyright (c) 2019-2023 QuestDB
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~  http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  ~
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.questdb</groupId>
    <artifactId>rust-maven-example</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Rust Maven Plugin Usage Example</name>
    <description>A Java command line tool with a string reverse function written in Rust bridged over JNI.</description>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>rust-maven-plugin</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>jar-jni-loader</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>io.questdb</groupId>
                <artifactId>rust-maven-plugin</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <configuration>
<!--                    <cargoProjectDir>${project.basedir}/str-reverse</cargoProjectDir>-->
                </configuration>
            </plugin>            
        </plugins>
    </build>

    <!-- <build>
        <plugins>
            <plugin>
                <groupId>io.questdb</groupId>
                <artifactId>rust-maven-plugin</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <executions>
                    <execution>
                        <id>build</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <cargoProjectDir>${project.basedir}/../example-rust</cargoProjectDir>
                    <cargoBuildDir>${project.build.directory}/cargo</cargoBuildDir>
                    <cargoBuildType>release</cargoBuildType>
                    <cargoBuildArgs>
                        <cargoBuildArg>- -features</cargoBuildArg>
                        <cargoBuildArg>jni</cargoBuildArg>
                    </cargoBuildArgs>
                    <cargoBuildEnv>
                        <cargoBuildEnvVar>
                            <cargoBuildEnvVarName>CARGO_TARGET_DIR</cargoBuildEnvVarName>
                            <cargoBuildEnvVarValue>${project.build.directory}/cargo</cargoBuildEnvVarValue>
                        </cargoBuildEnvVar>
                    </cargoBuildEnv>
                    <cargoBuildProfile>release</cargoBuildProfile>
                    <cargoBuildProfileArgs>
                        <cargoBuildProfileArg>- -features</cargoBuildProfileArg>
                        <cargoBuildProfileArg>jni</cargoBuildProfileArg>
                    </cargoBuildProfileArgs>
                    <cargoBuildProfileEnv>
                        <cargoBuildProfileEnvVar>
                            <cargoBuildProfileEnvVarName>CARGO_TARGET_DIR</cargoBuildProfileEnvVarName>
                            <cargoBuildProfileEnvVarValue>${project.build.directory}/cargo</cargoBuildProfileEnvVarValue>
                        </cargoBuildProfileEnvVar>
                    </cargoBuildProfileEnv>
                    <cargoBuildProfileArgs>
                        <cargoBuildProfileArg>- -features</cargoBuildProfileArg>
                        <cargoBuildProfileArg>jni</cargoBuildProfileArg>
                    </cargoBuildProfileArgs>
                    <cargoBuildProfileEnv>
                        <cargoBuildProfileEnvVar>
                            <cargoBuildProfileEnvVarName>CARGO_TARGET_DIR</cargoBuildProfileEnvVarName>
                            <cargoBuildProfileEnvVarValue>${project.build.directory}/cargo</cargoBuildProfileEnvVarValue>
                        </cargoBuildProfileEnvVar>
                    </cargoBuildProfileEnv>
    </build> -->

</project>